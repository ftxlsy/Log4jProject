#指定日志输出的目的地   控制台==》ConsoleAppender
#怎么实例化这个对象？
#ConsoleAppender console = new ConsoleAppender();
log4j.appender.console =org.apache.log4j.ConsoleAppender
#console.target = System.out/err  对象名.属性名
log4j.appender.console.Target = System.out
#console.layout = new PatternLayout();  创建输出格式对象
log4j.appender.console.Layout =org.apache.log4j.PatternLayout
#console.layout.ConversionPattern = %d{yyyy-MM-dd hh:mm:ss}  %l %m %n 输出指定格式
log4j.appender.console.Layout.ConversionPattern = %d{yyyy-MM-dd hh:mm:ss}  %l %m %n




#按时间创建新的文件
log4j.appender.file = org.apache.log4j.DailyRollingFileAppender
#每天还是每分。。。按时间去创建新的     第二次或以后很多次所创建的文件是以指定的这个时间命名
log4j.appender.file.DatePattern = '.'yyyy-MM-dd-hh-mm'.log'
#第一次创建时的文件名称
log4j.appender.file.File = E:/public/note/idealU/log/log4j.log
#console.layout = new PatternLayout();  创建输出格式对象
log4j.appender.file.Layout =org.apache.log4j.PatternLayout
#console.layout.ConversionPattern = %d{yyyy-MM-dd hh:mm:ss}  %l %m %n 输出指定格式
log4j.appender.file.Layout.ConversionPattern = %d{yyyy-MM-dd hh:mm:ss}  %l %m %n
#指定日志输出的级别  error warn info debug trace    和目的地
#指定所有的类都可以输出！！！
log4j.rootLogger = warn,console,file
#指定特定的包下可以输出
#log4j.logger.com.haha = warn,console